{"version":3,"file":"./dist/bundle.js","mappings":"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","sources":["webpack://webpack-bootstrap/./src/AudioPlayer.ts","webpack://webpack-bootstrap/./src/ChemicalCompounds.ts","webpack://webpack-bootstrap/./src/Elements.ts","webpack://webpack-bootstrap/./src/Explainer.ts","webpack://webpack-bootstrap/./src/Nomenclature.ts","webpack://webpack-bootstrap/./src/Scheduler.ts","webpack://webpack-bootstrap/./src/Util.ts","webpack://webpack-bootstrap/./src/explainations/Common.ts","webpack://webpack-bootstrap/./src/explainations/Compound.ts","webpack://webpack-bootstrap/./src/explainations/Formula.ts","webpack://webpack-bootstrap/./src/index.ts","webpack://webpack-bootstrap/webpack/bootstrap","webpack://webpack-bootstrap/webpack/before-startup","webpack://webpack-bootstrap/webpack/startup","webpack://webpack-bootstrap/webpack/after-startup"],"sourcesContent":["export namespace AudioPlayer {\n    export let BASE_PATH = \"./dist/assets/audio\";\n\n    let audioPlayerElement: HTMLAudioElement;\n\n    export function getAudioPlayerElement(): HTMLAudioElement {\n        if (!audioPlayerElement) {\n            audioPlayerElement = document.createElement(\"audio\");\n            document.body.appendChild(audioPlayerElement);\n        }\n        return audioPlayerElement;\n    }\n\n    export function getAudioPath(folder: string, name: string): string {\n        return `${BASE_PATH}/${folder}/${name}.mp3`;\n    }\n\n    export async function playAudiosInSequence(...paths: string[]): Promise<void> {\n        let seqItem = 0;\n        const audioPlayer = getAudioPlayerElement();\n        audioPlayer.src = paths[seqItem++];\n        audioPlayer.load();\n\n        audioPlayer.oncanplay = () => {\n            audioPlayer.play();\n        }\n\n        return new Promise((res, rej) => {\n            audioPlayer.onerror = rej;\n\n            audioPlayer.onended = () => {\n                if (seqItem == paths.length) return res();\n                audioPlayer.src = paths[seqItem++];\n            }\n        });\n    }\n}","import { Nomenclature } from \"./Nomenclature\";\nimport { Metals, NonMetals, PERIODIC_TABLE, PeriodicElement, compareElements, compareQuantifiedElements } from \"./Elements\";\nimport { swapObj } from \"./Util\";\n\nexport const QUANTITY_SUBSCRIPTS: Record<number, string> = {\n    0: \"₀\",\n    1: \"₁\",\n    2: \"₂\",\n    3: \"₃\",\n    4: \"₄\",\n    5: \"₅\",\n    6: \"₆\",\n    7: \"₇\",\n    8: \"₈\",\n    9: \"₉\",\n    10: \"₁₀\"\n};\n\nexport type Subscripts = typeof QUANTITY_SUBSCRIPTS[keyof typeof QUANTITY_SUBSCRIPTS];\n\nexport const SUBSCRIPT_TO_NUM: Record<Subscripts, number> = swapObj(QUANTITY_SUBSCRIPTS);\n\nexport interface ChemistryObject {\n    chemicalFormula: string;\n    name: string;\n}\n\nexport interface QuantifiedPeriodicElement<C extends PeriodicElement = PeriodicElement> {\n    element: C;\n    quantity: number;\n}\n\nexport class Bondable<C extends PeriodicElement = PeriodicElement> implements ChemistryObject {\n    public elements: QuantifiedPeriodicElement<C>[];\n    public charge: number;\n    public _name?: string;\n\n    constructor(elements: QuantifiedPeriodicElement<C>[], charge: number, name?: string) {\n        this.elements = elements\n        this.charge = charge;\n        this._name = name;\n    }\n\n    public get chemicalFormula(): string {\n        let result = \"\";\n        this.elements.forEach(el => result += el.element.symbol + (el.quantity != 1 ? QUANTITY_SUBSCRIPTS[el.quantity] : \"\"));\n        return result;\n    }\n\n    public get name(): string {\n        if (this.elements.length == 1) return this.elements[0].element.name;\n        return this._name!;\n    }\n    \n    public get singletonElement(): PeriodicElement {\n        return this.elements[0].element;\n    }\n\n    public get actsLikeMetal(): boolean {\n        return this.charge > 0;\n    }\n\n    public isSingleton(strict = false): boolean {\n        return this.elements.length == 1 && (strict ? this.elements[0].quantity == 1 : true);\n    }\n\n    public getCovalentName(mono: boolean = false, suffixed: boolean = false, index: number = 0): string {\n        if (this.isSingleton()) {\n            const quantifiedElement = this.elements[index];\n            let prefix = \"\";\n            let elementName = suffixed ? Nomenclature.ELEMENT_TO_ANION[quantifiedElement.element.name] : quantifiedElement.element.name;\n            \n            if (quantifiedElement.quantity == 1) {\n                prefix = mono ? Nomenclature.PREFIX_MAP[1] : \"\";\n            } else {\n                prefix = Nomenclature.PREFIX_MAP[<Nomenclature.ElementPrefixRange> quantifiedElement.quantity] || \"\";\n            }\n    \n            if (elementName.startsWith(\"o\") || elementName.startsWith(\"a\")) {\n                return prefix.substring(0, prefix.length - 2) + elementName;\n            } else {\n                return prefix + elementName;\n            }\n        } else {\n            return this._name!;\n        }\n    }\n\n    public static fromElement<C extends PeriodicElement>(element: C, quantity: number = 1, charge?: number): Bondable<C> {\n        return new Bondable([{ element, quantity }], charge ? charge : (element.charges.length == 1 ? element.charges[0] : element.charges[element.charges.length - 1]));\n    }\n}\n\nabstract class ChemicalCompound implements ChemistryObject {\n    public bondable1: Bondable;\n    public bondable2: Bondable;\n    public _name?: string;\n\n    constructor(bondable1: Bondable, bondable2: Bondable, name?: string) {\n        this.bondable1 = bondable1;\n        this.bondable2 = bondable2;\n        this._name = name;\n    }\n\n    public get name(): string {\n        if (this._name) return this._name;\n\n        let result = \"\";\n        return result;\n    }\n\n    public get chemicalFormula(): string {\n        return this.bondable1.chemicalFormula + this.bondable2.chemicalFormula;\n    }\n}\n\nexport class IonicCompound extends ChemicalCompound implements ChemistryObject {\n    constructor(metal: Bondable<Metals>, nonmetal: Bondable<NonMetals>) {\n        super(metal, nonmetal);\n    }\n\n    public get name(): string {\n        const anionEnding = Nomenclature.ELEMENT_TO_ANION[this.nonmetal.singletonElement.name] || this.nonmetal.singletonElement.name;\n        return `${this.metal.singletonElement.name} ${anionEnding}`;\n    }\n\n    public get metal(): Bondable<Metals> {\n        return this.bondable1;\n    };\n\n    public get nonmetal(): Bondable<NonMetals> {\n        return this.bondable2;\n    };\n}\n\nexport class CovalentCompound extends ChemicalCompound implements ChemistryObject {\n    constructor(nonmetal1: Bondable<NonMetals>, nonmetal2: Bondable<NonMetals>) {\n        super(nonmetal1, nonmetal2);\n    }\n\n    public get name(): string {\n        return `${this.nonmetal1.getCovalentName()} ${this.nonmetal2.getCovalentName(true, true)}`;\n    }\n\n    public get nonmetal1(): Bondable<NonMetals> {\n        return this.bondable1;\n    }\n\n    public get nonmetal2(): Bondable<NonMetals> {\n        return this.bondable2;\n    }\n}\n\nexport type PolyatomicNames = \"NITRATE\" | \"NITRITE\" | \"CHROMATE\" | \"DICHROMATE\" | \"CYANIDE\" | \"THIOCYANATE\" | \"PERMANGANATE\" | \"HYDROXIDE\" | \"PEROXIDE\" | \"AMIDE\" | \"SULFATE\" | \"SULFITE\" | \"PHOSPHITE\" | \"PHOSPHATE\" | \"HYDROGEN PHOSPHATE\" | \"DIHYDROGEN PHOSPHATE\" | \"ACETATE\" | \"PERCHLORATE\" | \"CHLORATE\" | \"CHLORITE\" | \"HYPOCHLORITE\" | \"PERIODATE\" | \"IODATE\" | \"IODITE\" | \"HYPOIODITE\" | \"PERBROMATE\" | \"BROMATE\" | \"BROMITE\" | \"HYPOBROMITE\" | \"CARBONATE\" | \"HYDROGEN CARBONATE\" | \"HYDROGEN SULFATE\" | \"HYDROGEN SULFITE\" | /*\"HYDROGEN SULFIDE\" |*/ \"AMMONIUM\";\n\nexport const POLYATOMICS: Record<PolyatomicNames, Bondable<NonMetals>> = {\n    \"NITRATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.NITROGEN, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 3 }], -1, \"NITRATE\"),\n    \"NITRITE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.NITROGEN, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 2 }], -1, \"NITRITE\"),\n    \"CHROMATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.CHROMIUM, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 4 }], -2, \"CHROMATE\"),\n    \"DICHROMATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.CHROMIUM, \"quantity\": 2 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 7 }], -2, \"DICHROMATE\"),\n    \"CYANIDE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.CARBON, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.NITROGEN, \"quantity\": 1 }], -1, \"CYANIDE\"),\n    \"THIOCYANATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.SULFUR, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.CARBON, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.NITROGEN, \"quantity\": 1 }], -1, \"THIOCYANATE\"),\n    \"PERMANGANATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.MANGANESE, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 4 }], -1, \"PERMANGANATE\"),\n    \"HYDROXIDE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.HYDROGEN, \"quantity\": 1 }], -1, \"HYDROXIDE\"),\n    \"PEROXIDE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 2 }], -2, \"PEROXIDE\"),\n    \"AMIDE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.NITROGEN, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.HYDROGEN, \"quantity\": 2 }], -1, \"AMIDE\"),\n    \"SULFATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.SULFUR, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 4 }], -2, \"SULFATE\"),\n    \"SULFITE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.SULFUR, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 3 }], -2, \"SULFITE\"),\n    \"PHOSPHATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.PHOSPHORUS, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 4 }], -3, \"PHOSPHATE\"),\n    \"PHOSPHITE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.PHOSPHORUS, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 3 }], -3, \"PHOSPHITE\"),\n    \"HYDROGEN PHOSPHATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.HYDROGEN, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.PHOSPHORUS, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 4 }], -2, \"HYDROGEN PHOSPHATE\"),\n    \"DIHYDROGEN PHOSPHATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.HYDROGEN, \"quantity\": 2 },\n        { \"element\": PERIODIC_TABLE.PHOSPHORUS, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 4 }], -1, \"DIHYDROGEN PHOSPHATE\"),\n    \"ACETATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.CARBON, \"quantity\": 2 },\n        { \"element\": PERIODIC_TABLE.HYDROGEN, \"quantity\": 3 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 2 }], -1, \"ACETATE\"),\n    \"PERCHLORATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.CHLORINE, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 4 }], -1, \"PERCHLORATE\"),\n    \"CHLORATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.CHLORINE, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 3 }], -1, \"CHLORATE\"),\n    \"CHLORITE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.CHLORINE, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 2 }], -1, \"CHLORITE\"),\n    \"HYPOCHLORITE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.CHLORINE, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 1 }], -1, \"HYPOCHLORITE\"),\n    \"PERIODATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.IODINE, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 4 }], -1, \"PERIODATE\"),\n    \"IODATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.IODINE, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 3 }], -1, \"IODATE\"),\n    \"IODITE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.IODINE, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 2 }], -1, \"IODITE\"),\n    \"HYPOIODITE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.IODINE, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 1 }], -1, \"HYPOIODITE\"),\n    \"PERBROMATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.BROMINE, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 4 }], -1, \"PERBROMATE\"),\n    \"BROMATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.BROMINE, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 3 }], -1, \"BROMATE\"),\n    \"BROMITE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.BROMINE, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 2 }], -1, \"BROMITE\"),\n    \"HYPOBROMITE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.BROMINE, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 1 }], -1, \"HYPOBROMITE\"),\n    \"CARBONATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.CARBON, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 3 }], -2, \"CARBONATE\"),\n    \"HYDROGEN CARBONATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.HYDROGEN, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.CARBON, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 3 }], -1, \"HYDROGEN CARBONATE\"),\n    \"HYDROGEN SULFATE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.HYDROGEN, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.SULFUR, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 4 }], -1, \"HYDROGEN SULFATE\"),\n    \"HYDROGEN SULFITE\": new Bondable([\n        { \"element\": PERIODIC_TABLE.HYDROGEN, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.SULFUR, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.OXYGEN, \"quantity\": 3 }], -1, \"HYDROGEN SULFITE\"),\n    // \"HYDROGEN SULFIDE\": new Bondable([\n    //     { \"element\": PERIODIC_TABLE.HYDROGEN, \"quantity\": 1 },\n    //     { \"element\": PERIODIC_TABLE.SULFUR, \"quantity\": 1 }], -1, \"HYDROGEN SULFIDE\"),\n    \"AMMONIUM\": new Bondable([\n        { \"element\": PERIODIC_TABLE.NITROGEN, \"quantity\": 1 },\n        { \"element\": PERIODIC_TABLE.HYDROGEN, \"quantity\": 4 }], 1, \"AMMONIUM\")\n}\n\nexport function getPolyatomic(quantifiedElement: QuantifiedPeriodicElement[]): Bondable | null {\n    const polyatomics = Object.values(POLYATOMICS);\n    return polyatomics.find(pa => {\n        let equals = true;\n        if (pa.elements.length == quantifiedElement.length) {\n            for (let i = 0;i < quantifiedElement.length;i++) {\n                equals &&= compareQuantifiedElements(pa.elements[i], quantifiedElement[i]);\n            }\n            return equals;\n        } else {\n            return false;\n        }\n    }) || null;\n}","import { QuantifiedPeriodicElement } from \"./ChemicalCompounds\";\nimport { Nomenclature } from \"./Nomenclature\";\n\nexport type PeriodicElementNames = \"HYDROGEN\" | \"HELIUM\" | \"LITHIUM\" | \"BERYLLIUM\" | \"BORON\" | \"CARBON\" | \"NITROGEN\" | \"OXYGEN\" | \"FLUORINE\" | \"NEON\" | \"SODIUM\" | \"MAGNESIUM\" | \"ALUMINIUM\" | \"SILICON\" | \"PHOSPHORUS\" | \"SULFUR\" | \"CHLORINE\" | \"ARGON\" | \"POTASSIUM\" | \"CALCIUM\" | \"SCANDIUM\" | \"TITANIUM\" | \"VANADIUM\" | \"CHROMIUM\" | \"MANGANESE\" | \"IRON\" | \"COBALT\" | \"NICKEL\" | \"COPPER\" | \"ZINC\" | \"GALLIUM\" | \"GERMANIUM\" | \"ARSENIC\" | \"SELENIUM\" | \"BROMINE\" | \"KRYPTON\" | \"RUBIDIUM\" | \"STRONTIUM\" | \"YTTRIUM\" | \"ZIRCONIUM\" | \"NIOBIUM\" | \"MOLYBDENUM\" | \"TECHNETIUM\" | \"RUTHENIUM\" | \"RHODIUM\" | \"PALLADIUM\" | \"SILVER\" | \"CADMIUM\" | \"INDIUM\" | \"TIN\" | \"ANTIMONY\" | \"TELLURIUM\" | \"IODINE\" | \"XENON\" | \"CESIUM\" | \"BARIUM\" | \"HAFNIUM\" | \"TANTALUM\" | \"TUNGSTEN\" | \"RHENIUM\" | \"OSMIUM\" | \"IRIDIUM\" | \"PLATINUM\" | \"GOLD\" | \"MERCURY\" | \"THALLIUM\" | \"LEAD\";\nexport type PeriodicTable = Record<PeriodicElementNames, PeriodicElement>;\n\nexport interface PeriodicElement {\n    name: PeriodicElementNames;\n    number: number;\n    pos: [ number, number ];\n    symbol: string;\n    charges: number[];\n    metal: boolean;\n}\n\nexport const PERIODIC_TABLE: PeriodicTable = {\n\tHYDROGEN:      { name: \"HYDROGEN\",      number: 1, pos: [ 1, 1 ], charges: [ 1, -1 ], metal: false, symbol: \"H\" },\n\tHELIUM:        { name: \"HELIUM\",        number: 2, pos: [ 18, 1 ], charges: [], metal: false, symbol: \"He\" },\n\tLITHIUM:       { name: \"LITHIUM\",       number: 3, pos: [ 1, 2 ], charges: [ 1 ], metal: true, symbol: \"Li\" },\n\tBERYLLIUM:     { name: \"BERYLLIUM\",     number: 4, pos: [ 2, 2 ], charges: [ 2 ], metal: true, symbol: \"Be\" },\n\tBORON:         { name: \"BORON\",         number: 5, pos: [ 13, 2 ], charges: [ 3 ], metal: true, symbol: \"B\" },\n\tCARBON:        { name: \"CARBON\",        number: 6, pos: [ 14, 2 ], charges: [ 4, -4 ], metal: false, symbol: \"C\" },\n\tNITROGEN:      { name: \"NITROGEN\",      number: 7, pos: [ 15, 2 ], charges: [ -3 ], metal: false, symbol: \"N\" },\n\tOXYGEN:        { name: \"OXYGEN\",        number: 8, pos: [ 16, 2 ], charges: [ -2 ], metal: false, symbol: \"O\" },\n\tFLUORINE:      { name: \"FLUORINE\",      number: 9, pos: [ 17, 2 ], charges: [ -1 ], metal: false, symbol: \"F\" },\n\tNEON:          { name: \"NEON\",          number: 10, pos: [ 18, 2 ], charges: [], metal: false, symbol: \"Ne\" },\n\tSODIUM:        { name: \"SODIUM\",        number: 11, pos: [ 1, 3 ], charges: [ 1 ], metal: true, symbol: \"Na\" },\n\tMAGNESIUM:     { name: \"MAGNESIUM\",     number: 12, pos: [ 2, 3 ], charges: [ 2 ], metal: true, symbol: \"Mg\" },\n\tALUMINIUM:     { name: \"ALUMINIUM\",     number: 13, pos: [ 13, 3 ], charges: [ 3 ], metal: true, symbol: \"Al\" },\n\tSILICON:       { name: \"SILICON\",       number: 14, pos: [ 14, 3 ], charges: [ 4, -4 ], metal: true, symbol: \"Si\" },\n\tPHOSPHORUS:    { name: \"PHOSPHORUS\",    number: 15, pos: [ 15, 3 ], charges: [ -3 ], metal: false, symbol: \"P\" },\n\tSULFUR:        { name: \"SULFUR\",        number: 16, pos: [ 16, 3 ], charges: [ -2 ], metal: false, symbol: \"S\" },\n\tCHLORINE:      { name: \"CHLORINE\",      number: 17, pos: [ 17, 3 ], charges: [ -1 ], metal: false, symbol: \"Cl\" },\n\tARGON:         { name: \"ARGON\",         number: 18, pos: [ 18, 3 ], charges: [], metal: false, symbol: \"Ar\" },\n\tPOTASSIUM:     { name: \"POTASSIUM\",     number: 19, pos: [ 1, 4 ], charges: [ 1 ], metal: true, symbol: \"K\" },\n\tCALCIUM:       { name: \"CALCIUM\",       number: 20, pos: [ 2, 4 ], charges: [ 2 ], metal: true, symbol: \"Ca\" },\n\tSCANDIUM:      { name: \"SCANDIUM\",      number: 21, pos: [ 3, 4 ], charges: [ 3 ], metal: true, symbol: \"Sc\" },\n\tTITANIUM:      { name: \"TITANIUM\",      number: 22, pos: [ 4, 4 ], charges: [ 4 ], metal: true, symbol: \"Ti\" },\n\tVANADIUM:      { name: \"VANADIUM\",      number: 23, pos: [ 5, 4 ], charges: [ 5 ], metal: true, symbol: \"V\" },\n\tCHROMIUM:      { name: \"CHROMIUM\",      number: 24, pos: [ 6, 4 ], charges: [ 3, 6 ], metal: true, symbol: \"Cr\" },\n\tMANGANESE:     { name: \"MANGANESE\",     number: 25, pos: [ 7, 4 ], charges: [ 2, 4, 7 ], metal: true, symbol: \"Mn\" },\n\tIRON:          { name: \"IRON\",          number: 26, pos: [ 8, 4 ], charges: [ 2, 3 ], metal: true, symbol: \"Fe\" },\n\tCOBALT:        { name: \"COBALT\",        number: 27, pos: [ 9, 4 ], charges: [ 2, 3 ], metal: true, symbol: \"Co\" },\n\tNICKEL:        { name: \"NICKEL\",        number: 28, pos: [ 10, 4 ], charges: [ 2 ], metal: true, symbol: \"Ni\" },\n\tCOPPER:        { name: \"COPPER\",        number: 29, pos: [ 11, 4 ], charges: [ 2 ], metal: true, symbol: \"Cu\" },\n\tZINC:          { name: \"ZINC\",          number: 30, pos: [ 12, 4 ], charges: [ 2 ], metal: true, symbol: \"Zn\" },\n\tGALLIUM:       { name: \"GALLIUM\",       number: 31, pos: [ 13, 4 ], charges: [ 3 ], metal: true, symbol: \"Ga\" },\n\tGERMANIUM:     { name: \"GERMANIUM\",     number: 32, pos: [ 14, 4 ], charges: [ 4, -4 ], metal: true, symbol: \"Ge\" },\n\tARSENIC:       { name: \"ARSENIC\",       number: 33, pos: [ 15, 4 ], charges: [ -3 ], metal: true, symbol: \"As\" },\n\tSELENIUM:      { name: \"SELENIUM\",      number: 34, pos: [ 16, 4 ], charges: [ -2 ], metal: false, symbol: \"Se\" },\n\tBROMINE:       { name: \"BROMINE\",       number: 35, pos: [ 17, 4 ], charges: [ -1 ], metal: false, symbol: \"Br\" },\n\tKRYPTON:       { name: \"KRYPTON\",       number: 36, pos: [ 18, 4 ], charges: [], metal: false, symbol: \"Kr\" },\n\tRUBIDIUM:      { name: \"RUBIDIUM\",      number: 37, pos: [ 1, 5 ], charges: [ 1 ], metal: true, symbol: \"Rb\" },\n\tSTRONTIUM:     { name: \"STRONTIUM\",     number: 38, pos: [ 2, 5 ], charges: [ 2 ], metal: true, symbol: \"Sr\" },\n\tYTTRIUM:       { name: \"YTTRIUM\",       number: 39, pos: [ 3, 5 ], charges: [ 3 ], metal: true, symbol: \"Y\" },\n\tZIRCONIUM:     { name: \"ZIRCONIUM\",     number: 40, pos: [ 4, 5 ], charges: [ 4 ], metal: true, symbol: \"Zr\" },\n\tNIOBIUM:       { name: \"NIOBIUM\",       number: 41, pos: [ 5, 5 ], charges: [ 5 ], metal: true, symbol: \"Nb\" },\n\tMOLYBDENUM:    { name: \"MOLYBDENUM\",    number: 42, pos: [ 6, 5 ], charges: [ 4, 6 ], metal: true, symbol: \"Mo\" },\n\tTECHNETIUM:    { name: \"TECHNETIUM\",    number: 43, pos: [ 7, 5 ], charges: [ 4, 7 ], metal: true, symbol: \"Tc\" },\n\tRUTHENIUM:     { name: \"RUTHENIUM\",     number: 44, pos: [ 8, 5 ], charges: [ 3, 4 ], metal: true, symbol: \"Ru\" },\n\tRHODIUM:       { name: \"RHODIUM\",       number: 45, pos: [ 9, 5 ], charges: [ 3 ], metal: true, symbol: \"Rh\" },\n\tPALLADIUM:     { name: \"PALLADIUM\",     number: 46, pos: [ 10, 5 ], charges: [ 2, 4 ], metal: true, symbol: \"Pd\" },\n\tSILVER:        { name: \"SILVER\",        number: 47, pos: [ 11, 5 ], charges: [ 1 ], metal: true, symbol: \"Ag\" },\n\tCADMIUM:       { name: \"CADMIUM\",       number: 48, pos: [ 12, 5 ], charges: [ 2 ], metal: true, symbol: \"Cd\" },\n\tINDIUM:        { name: \"INDIUM\",        number: 49, pos: [ 13, 5 ], charges: [ 3 ], metal: true, symbol: \"In\" },\n\tTIN:           { name: \"TIN\",           number: 50, pos: [ 14, 5 ], charges: [ 4, -4 ], metal: true, symbol: \"Sn\" },\n\tANTIMONY:      { name: \"ANTIMONY\",      number: 51, pos: [ 15, 5 ], charges: [ -3 ], metal: true, symbol: \"Sb\" },\n\tTELLURIUM:     { name: \"TELLURIUM\",     number: 52, pos: [ 16, 5 ], charges: [ -2 ], metal: true, symbol: \"Te\" },\n\tIODINE:        { name: \"IODINE\",        number: 53, pos: [ 17, 5 ], charges: [ -1 ], metal: false, symbol: \"I\" },\n\tXENON:         { name: \"XENON\",         number: 54, pos: [ 18, 5 ], charges: [], metal: false, symbol: \"Xe\" },\n\tCESIUM:        { name: \"CESIUM\",        number: 55, pos: [ 1, 6 ], charges: [ 1 ], metal: true, symbol: \"Cs\" },\n\tBARIUM:        { name: \"BARIUM\",        number: 56, pos: [ 2, 6 ], charges: [ 2 ], metal: true, symbol: \"Ba\" },\n\tHAFNIUM:       { name: \"HAFNIUM\",       number: 72, pos: [ 4, 6 ], charges: [ 4 ], metal: true, symbol: \"Hf\" },\n\tTANTALUM:      { name: \"TANTALUM\",      number: 73, pos: [ 5, 6 ], charges: [ 5 ], metal: true, symbol: \"Ta\" },\n\tTUNGSTEN:      { name: \"TUNGSTEN\",      number: 74, pos: [ 6, 6 ], charges: [ 4, 6 ], metal: true, symbol: \"W\" },\n\tRHENIUM:       { name: \"RHENIUM\",       number: 75, pos: [ 7, 6 ], charges: [ 4 ], metal: true, symbol: \"Re\" },\n\tOSMIUM:        { name: \"OSMIUM\",        number: 76, pos: [ 8, 6 ], charges: [ 4 ], metal: true, symbol: \"Os\" },\n\tIRIDIUM:       { name: \"IRIDIUM\",       number: 77, pos: [ 9, 6 ], charges: [ 3, 4 ], metal: true, symbol: \"Ir\" },\n\tPLATINUM:      { name: \"PLATINUM\",      number: 78, pos: [ 10, 6 ], charges: [ 2, 4 ], metal: true, symbol: \"Pt\" },\n\tGOLD:          { name: \"GOLD\",          number: 79, pos: [ 11, 6 ], charges: [ 3 ], metal: true, symbol: \"Au\" },\n\tMERCURY:       { name: \"MERCURY\",       number: 80, pos: [ 12, 6 ], charges: [ 1, 2 ], metal: true, symbol: \"Hg\" },\n\tTHALLIUM:      { name: \"THALLIUM\",      number: 81, pos: [ 13, 6 ], charges: [ 1, 3 ], metal: true, symbol: \"Tl\" },\n\tLEAD:          { name: \"LEAD\",          number: 82, pos: [ 14, 6 ], charges: [ 2, 4 ], metal: true, symbol: \"Pb\" },\n};\n\nexport const METALS = [ PERIODIC_TABLE.HYDROGEN, PERIODIC_TABLE.LITHIUM, PERIODIC_TABLE.BERYLLIUM, PERIODIC_TABLE.BORON, PERIODIC_TABLE.SODIUM, PERIODIC_TABLE.MAGNESIUM, PERIODIC_TABLE.ALUMINIUM, PERIODIC_TABLE.SILICON, PERIODIC_TABLE.POTASSIUM, PERIODIC_TABLE.CALCIUM, PERIODIC_TABLE.SCANDIUM, PERIODIC_TABLE.TITANIUM, PERIODIC_TABLE.VANADIUM, PERIODIC_TABLE.CHROMIUM, PERIODIC_TABLE.MANGANESE, PERIODIC_TABLE.IRON, PERIODIC_TABLE.COBALT, PERIODIC_TABLE.NICKEL, PERIODIC_TABLE.COPPER, PERIODIC_TABLE.ZINC, PERIODIC_TABLE.GALLIUM, PERIODIC_TABLE.GERMANIUM, PERIODIC_TABLE.ARSENIC, PERIODIC_TABLE.RUBIDIUM, PERIODIC_TABLE.STRONTIUM, PERIODIC_TABLE.YTTRIUM, PERIODIC_TABLE.ZIRCONIUM, PERIODIC_TABLE.NIOBIUM, PERIODIC_TABLE.MOLYBDENUM, PERIODIC_TABLE.TECHNETIUM, PERIODIC_TABLE.RUTHENIUM, PERIODIC_TABLE.RHODIUM, PERIODIC_TABLE.PALLADIUM, PERIODIC_TABLE.SILVER, PERIODIC_TABLE.CADMIUM, PERIODIC_TABLE.INDIUM, PERIODIC_TABLE.TIN, PERIODIC_TABLE.ANTIMONY, PERIODIC_TABLE.TELLURIUM, PERIODIC_TABLE.IODINE, PERIODIC_TABLE.CESIUM, PERIODIC_TABLE.BARIUM, PERIODIC_TABLE.HAFNIUM, PERIODIC_TABLE.TANTALUM, PERIODIC_TABLE.TUNGSTEN, PERIODIC_TABLE.RHENIUM, PERIODIC_TABLE.OSMIUM, PERIODIC_TABLE.IRIDIUM, PERIODIC_TABLE.PLATINUM, PERIODIC_TABLE.GOLD, PERIODIC_TABLE.MERCURY, PERIODIC_TABLE.THALLIUM, PERIODIC_TABLE.LEAD];\nexport type Metals = typeof PERIODIC_TABLE.HYDROGEN | typeof PERIODIC_TABLE.LITHIUM | typeof PERIODIC_TABLE.BERYLLIUM | typeof PERIODIC_TABLE.BORON | typeof PERIODIC_TABLE.SODIUM | typeof PERIODIC_TABLE.MAGNESIUM | typeof PERIODIC_TABLE.ALUMINIUM | typeof PERIODIC_TABLE.SILICON | typeof PERIODIC_TABLE.POTASSIUM | typeof PERIODIC_TABLE.CALCIUM | typeof PERIODIC_TABLE.SCANDIUM | typeof PERIODIC_TABLE.TITANIUM | typeof PERIODIC_TABLE.VANADIUM | typeof PERIODIC_TABLE.CHROMIUM | typeof PERIODIC_TABLE.MANGANESE | typeof PERIODIC_TABLE.IRON | typeof PERIODIC_TABLE.COBALT | typeof PERIODIC_TABLE.NICKEL | typeof PERIODIC_TABLE.COPPER | typeof PERIODIC_TABLE.ZINC | typeof PERIODIC_TABLE.GALLIUM | typeof PERIODIC_TABLE.GERMANIUM | typeof PERIODIC_TABLE.ARSENIC | typeof PERIODIC_TABLE.RUBIDIUM | typeof PERIODIC_TABLE.STRONTIUM | typeof PERIODIC_TABLE.YTTRIUM | typeof PERIODIC_TABLE.ZIRCONIUM | typeof PERIODIC_TABLE.NIOBIUM | typeof PERIODIC_TABLE.MOLYBDENUM | typeof PERIODIC_TABLE.TECHNETIUM | typeof PERIODIC_TABLE.RUTHENIUM | typeof PERIODIC_TABLE.RHODIUM | typeof PERIODIC_TABLE.PALLADIUM | typeof PERIODIC_TABLE.SILVER | typeof PERIODIC_TABLE.CADMIUM | typeof PERIODIC_TABLE.INDIUM | typeof PERIODIC_TABLE.TIN | typeof PERIODIC_TABLE.ANTIMONY | typeof PERIODIC_TABLE.TELLURIUM | typeof PERIODIC_TABLE.IODINE | typeof PERIODIC_TABLE.CESIUM | typeof PERIODIC_TABLE.BARIUM | typeof PERIODIC_TABLE.HAFNIUM | typeof PERIODIC_TABLE.TANTALUM | typeof PERIODIC_TABLE.TUNGSTEN | typeof PERIODIC_TABLE.RHENIUM | typeof PERIODIC_TABLE.OSMIUM | typeof PERIODIC_TABLE.IRIDIUM | typeof PERIODIC_TABLE.PLATINUM | typeof PERIODIC_TABLE.GOLD | typeof PERIODIC_TABLE.MERCURY | typeof PERIODIC_TABLE.THALLIUM | typeof PERIODIC_TABLE.LEAD;\n\nexport const BONDABLE_NONMETALS = [ PERIODIC_TABLE.HYDROGEN, PERIODIC_TABLE.CARBON, PERIODIC_TABLE.NITROGEN, PERIODIC_TABLE.OXYGEN, PERIODIC_TABLE.FLUORINE, PERIODIC_TABLE.PHOSPHORUS, PERIODIC_TABLE.SULFUR, PERIODIC_TABLE.CHLORINE, PERIODIC_TABLE.SELENIUM, PERIODIC_TABLE.BROMINE, PERIODIC_TABLE.IODINE ];\nexport type BondableNonMetals = typeof PERIODIC_TABLE.HYDROGEN | typeof PERIODIC_TABLE.CARBON | typeof PERIODIC_TABLE.NITROGEN | typeof PERIODIC_TABLE.OXYGEN | typeof PERIODIC_TABLE.FLUORINE | typeof PERIODIC_TABLE.PHOSPHORUS | typeof PERIODIC_TABLE.SULFUR | typeof PERIODIC_TABLE.CHLORINE | typeof PERIODIC_TABLE.SELENIUM | typeof PERIODIC_TABLE.BROMINE | typeof PERIODIC_TABLE.IODINE;\n\nexport const NOBLE_GASES = [ PERIODIC_TABLE.NEON, PERIODIC_TABLE.ARGON, PERIODIC_TABLE.HELIUM, PERIODIC_TABLE.KRYPTON, PERIODIC_TABLE.XENON ];\nexport type NobleGases = typeof PERIODIC_TABLE.NEON | typeof PERIODIC_TABLE.ARGON | typeof PERIODIC_TABLE.HELIUM | typeof PERIODIC_TABLE.KRYPTON | typeof PERIODIC_TABLE.XENON;\n\nexport const NONMETALS = BONDABLE_NONMETALS.concat(NOBLE_GASES);\nexport type NonMetals = BondableNonMetals | NobleGases;\n\nexport const HOFBrINClS = [ PERIODIC_TABLE.HYDROGEN, PERIODIC_TABLE.OXYGEN, PERIODIC_TABLE.FLUORINE, PERIODIC_TABLE.BROMINE, PERIODIC_TABLE.IODINE, PERIODIC_TABLE.NITROGEN, PERIODIC_TABLE.CHLORINE ];\nexport type HOFBrINCl = typeof PERIODIC_TABLE.HYDROGEN | typeof PERIODIC_TABLE.OXYGEN | typeof PERIODIC_TABLE.FLUORINE |  typeof PERIODIC_TABLE.BROMINE |  typeof PERIODIC_TABLE.IODINE | typeof PERIODIC_TABLE.NITROGEN | typeof PERIODIC_TABLE.CHLORINE;\n\nexport function compareElements(el1: PeriodicElement, el2: PeriodicElement): boolean {\n\treturn el1.symbol == el2.symbol;\n}\n\nexport function compareQuantifiedElements(el1: QuantifiedPeriodicElement, el2: QuantifiedPeriodicElement): boolean {\n\treturn el1.element.symbol == el2.element.symbol && el1.quantity == el2.quantity;\n}\n\nexport function getFromSymbol(symbol: string): PeriodicElement {\n\tconst elements = Object.values(PERIODIC_TABLE);\n\treturn elements.find(el => el.symbol == symbol)!;\n}\n\ninterface CombinationResult {\n\trawPrefix: string;\n\tprefix: string;\n\telementString: string;\n\telement: PeriodicElement;\n\tresult: string;\n\tmoddedPrefix: boolean;\n}\n\nexport function combineSuffix(prefix: number, element: PeriodicElement, mono: boolean = false): CombinationResult {\n\tconst rawPrefix = Nomenclature.PREFIX_MAP[<Nomenclature.ElementPrefixRange> prefix];\n\tconst moddedPrefix = Nomenclature.MODDED_PREFIX_MAP[<Nomenclature.ElementPrefixRange> prefix];\n\tconst elString = element.name.toLowerCase();\n\tconst chosenPrefix = (elString.startsWith(\"o\") || elString.startsWith(\"a\")) ? moddedPrefix : rawPrefix;\n\tconst monoMask = prefix == 1 && !mono ? \"\" : chosenPrefix;\n\n\treturn {\n\t\t\"rawPrefix\": rawPrefix,\n\t\t\"prefix\": monoMask,\n\t\t\"elementString\": elString,\n\t\t\"element\": element,\n\t\t\"result\": monoMask + elString,\n\t\t\"moddedPrefix\": rawPrefix != chosenPrefix\n\t}\n}","import { $resetBtn, ButtonLogic, delay } from \".\";\nimport { sample } from \"./Util\";\nimport { variations } from \"./explainations/Common\";\n\nexport const $explaination = $(\"#explaination\");\n\nexport type ExplainerSect = JQuery<HTMLElement>;\nexport type ListPoint = JQuery<HTMLDivElement>;\n\ninterface ExplainParseResult {\n    result: string;\n    variations: string[];\n}\n\nexport namespace Explainer {\n    export let explaining: boolean;\n\n    export function parseExplainationString(str: string, additionalTemplates: Record<string, string> = {}): ExplainParseResult {\n        let result: ExplainParseResult = {\n            \"result\": str,\n            \"variations\": []\n        };\n\n        for (const variationName in variations) {\n            const variation = sample(variations[variationName]);\n            result.result = result.result.replace(new RegExp(`\\\\{${variationName}\\\\}`), variation);\n            result.variations.push(variation);\n        }\n\n        for (const additionals in additionalTemplates) {\n            result.result = result.result.replace(new RegExp(`{${additionals}}`, \"g\"), additionalTemplates[additionals]);\n        }\n\n        result.result = result.result.replace(/\\[B\\]/g, \"<div class=\\\"d-inline bold\\\">\")\n            .replace(/\\[U\\]/g, \"<div class=\\\"d-inline underline\\\">\")\n            .replace(/\\[I\\]/g, \"<div class=\\\"d-inline italic\\\">\")\n            .replace(/\\[\\/\\]/g, \"</div>\");\n        return result;\n    }\n\n    export async function beginExplaination() {\n        $explaination.empty();\n        ButtonLogic.inputEnable(false);\n        explaining = true;\n        return delay(2000);\n    }\n\n    export function followUpExplainationSect(sec: ExplainerSect) {\n        sec.css({ \"max-height\": window.innerHeight + \"px\", \"padding\": \"30px\" });\n        window.scrollTo(0, document.body.scrollHeight);\n    }\n\n    export function createExplainationSect(): ExplainerSect {\n        const $section = $(`<section class=\"anim-in-down\"></section>`, { \"class\": \"container-fluid rounded\" });\n        $section.css({\n            \"max-height\": \"0px\",\n            \"padding-left\": \"30px\",\n            \"padding-right\": \"30px\",\n            \"overflow\": \"scroll\",\n            \"background\": \"#f1f1f1\",\n            \"display\": \"flex\",\n            \"flex-direction\": \"row\",\n            \"gap\": \"30px\",\n            \"margin-top\": \"5px\",\n            \"transition\": \"padding 1s, max-height 1s\"\n        });\n        $explaination.append($section);\n        return $section;\n    }\n\n    export function followUpListPoint(point: ListPoint) {\n        point.css({\n            \"opacity\": 1,\n            \"transform\": \"scale(1)\"\n        });\n        return delay(1000);\n    }\n\n    export function createListPoint(sec: ExplainerSect, ind: number): JQuery<HTMLDivElement> {\n        const $listPoint = $<HTMLDivElement>(\"<div></div>\");\n        $listPoint.text(ind);\n        $listPoint.css({\n            \"display\": \"flex\",\n            \"justify-content\": \"center\",\n            \"align-items\": \"center\",\n            \"padding\": \"15px\",\n            \"width\": \"20px\",\n            \"height\": \"20px\",\n            \"background\": \"#50B5FF\",\n            \"color\": \"#ffffff\",\n            \"border-radius\": \"100%\",\n            \"opacity\": 0,\n            \"transform\": \"scale(1.5)\",\n            \"font-size\": \"20px\",\n            \"transition\": \"opacity 1s, transform 1s\"\n        });\n        sec.append($listPoint);\n        return $listPoint;\n    }\n\n    export async function endExplaination() {\n        $resetBtn.removeAttr(\"disabled\");\n        $resetBtn.fadeIn(1000);\n        window.scrollTo(0, $resetBtn[0].getBoundingClientRect().bottom);\n        explaining = false;\n        return delay(1000);\n    }\n}","import { PeriodicElementNames } from \"./Elements\";\nimport { swapObj } from \"./Util\";\n\nexport namespace Nomenclature {\n    export const ANION_MAP = {\n        \"HYDRIDE\": \"HYDROGEN\",\n        \"CARBIDE\": \"CARBON\",\n        \"NITRIDE\": \"NITROGEN\",\n        \"OXIDE\": \"OXYGEN\",\n        \"FLUORIDE\": \"FLUORINE\",\n        \"PHOSPHIDE\": \"PHOSPHORUS\",\n        \"SULFIDE\": \"SULFUR\",\n        \"CHLORIDE\": \"CHLORINE\",\n        \"SELENIDE\": \"SELENIUM\",\n        \"BROMIDE\": \"BROMINE\",\n        \"IODIDE\": \"IODINE\"\n    };\n    \n    export type AnionNames = keyof typeof ANION_MAP;\n    export type ValidAnionNonMetal = typeof ANION_MAP[keyof typeof ANION_MAP];\n    \n    export const ELEMENT_TO_ANION: Record<ValidAnionNonMetal, AnionNames> = swapObj(ANION_MAP);\n    \n    \n\n\n    export const PREFIX_MAP = {\n        1: \"MONO\",\n        2: \"DI\",\n        3: \"TRI\",\n        4: \"TETRA\",\n        5: \"PENTA\",\n        6: \"HEXA\",\n        7: \"HEPTA\",\n        8: \"OCTA\",\n        9: \"NONA\",\n        10: \"DECA\"\n    };\n\n    export const MODDED_PREFIX_MAP = {\n        1: \"MON\",\n        2: \"DI\",\n        3: \"TRI\",\n        4: \"TETR\",\n        5: \"PENT\",\n        6: \"HEX\",\n        7: \"HEPT\",\n        8: \"OCT\",\n        9: \"NON\",\n        10: \"DEC\"\n    }\n    \n    export type ElementPrefixRange = keyof typeof PREFIX_MAP;\n    export type PrefixNames = typeof PREFIX_MAP[ElementPrefixRange];\n    export type ModdedPrefixNames = typeof MODDED_PREFIX_MAP[ElementPrefixRange];\n    export const MODDED_PREFIX_TO_NUM: Record<ModdedPrefixNames, number> = swapObj(MODDED_PREFIX_MAP);\n    export const PREFIX_TO_NUM: Record<PrefixNames, number> = swapObj(PREFIX_MAP);\n}","export class WaitFor {\n    public test: () => boolean;\n    public process: Function;\n    \n    constructor(test: () => boolean, process?: Function) {\n        this.test = test;\n        this.process = process || (function () {});\n        this.tick();\n    }\n\n    private tick() {\n        if (this.test())\n            return this.process();\n        setTimeout(this.tick.bind(this));\n    }\n}\n\nexport class WaitForPromise<T> extends WaitFor {\n    private done: boolean = false;\n\n    constructor(promise: Promise<T>) {\n        super(() => false);\n        \n        const self = this;\n\n        this.test = () => this.done;\n        \n        promise.then(function() {\n            self.done = true;\n        }).catch(function() {\n            self.done = true;\n        });\n    }\n}\n\nexport class WaitForMillis extends WaitFor {\n    readonly millis: number;\n\n    constructor(millis: number = 1, process?: Function) {\n        const now = Date.now() + millis;\n        super(() => (Date.now() >= now), process);\n        this.millis = millis;\n    }\n}\n\nexport class WaitForSeconds extends WaitForMillis {\n    constructor(seconds: number = 1, process?: Function | (() => void)) {\n        super(seconds * 1000, process);\n    }\n}\n\nexport namespace Routine {\n    function continueGeneratorTask(task: Generator<WaitFor | void, any, any>) {\n        const result = task.next();\n        const continueTask = () => continueGeneratorTask(task);\n        \n        if (result.done) return;\n        \n        if (result.value instanceof WaitFor)\n            result.value.process = continueTask;\n        else\n            new WaitForMillis(1, continueTask);\n    }\n\n    export async function startTask(process: () => Generator<WaitFor | void, any, any>) {\n        const task = process();\n        continueGeneratorTask(task);\n    }\n}","type Recordable = number | string;\n\nexport function capitalize(s: string): string {\n    let strings = s.split(\" \");\n\n    for (let i = 0;i < strings.length;i++) {\n        const s = strings[i];\n        strings[i] = s ? s[0].toUpperCase() + s.substring(1) : \"\";\n    }\n    return strings.join(\" \");\n}\n\nexport function sample<T>(arr: T[]): T {\n    return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function swapObj<K extends Recordable, V extends Recordable>(obj: Record<K, V>): Record<V, K> {\n    let result: Record<Recordable, Recordable> = {};\n    for (const k in obj) result[obj[k]] = k;\n    return <Record<V, K>>result;\n}","export const variations: Record<string, string[]> = {\n    \"INTRO.IDENTIFICATION.START\": [\n        \"Firstly\",\n        \"First\",\n        \"To start\",\n        \"In order to start\",\n        \"To begin\",\n        \"In order to begin\",\n        \"In the beginning\",\n        \"In the start\"\n    ],\n    \"INTRO.IDENTIFICATION.TO_IDENTIFY\": [\n        \"identify\",\n        \"figure out\",\n        \"look closely\",\n        \"see\"\n    ],\n    \"INTRO.IDENTIFICATION.TO_CHECK_THE_FOLLOWING\": [\n        \"following\",\n        \"given\",\n        \"inputted\"\n    ]\n}\n\nexport const commonExplainationScript = {\n    \"VALIDATION\": {\n        \"FORMULA\": \"Unfortunately, the formula you provided contains a symbol that I don't recognize. I wasn't programmed with knowledge of a chemical named [B]{symbol}[/].\",\n        \"COMPOUND\": \"Unfortunately, the chemical name you provided contains chemicals that I don't recognize. I wasn't programmed with knowledge of [B]{name}[/].\",\n        \"COMMON\": \"I have information for all chemicals from [U]Hydrogen to Lead[/], [I]not including the Lanthanoids or Actinoids[/]. Sorry for the inconvenience!\"\n    },\n    \"INTRO\": {\n        \"IDENTIFICATION\": \"{INTRO.IDENTIFICATION.START}, we will {INTRO.IDENTIFICATION.TO_IDENTIFY} if the {INTRO.IDENTIFICATION.TO_CHECK_THE_FOLLOWING} compound is a [B]Ionic[/] or [B]Covalent[/] compound. An [B]Ionic[/] compound has the [U]metal[/] as the [B]cation[/] and [U]non-metal[/] as the [B]anion[/]. In ionic compounds, [U]metals will [B]give[/] electrons[/] and [U]non-metals will [B]take[/] electrons[/].\",\n\n        \"CONTAINS_POLYATOMIC\": \"Before starting, notice this compound has more than 2 elements in it's formula, which means it contains a polyatomic.\",\n        \"CONTAINS_POLYATOMIC_CATION\": \"Looking closely, [B]{CATION_F}[/] seems to be a [U]{CATION}[/] molecule.\",\n        \"CONTAINS_POLYATOMIC_ANION\": \"Looking closely, [B]{ANION_F}[/] seems to be a [U]{ANION}[/] molecule.\",\n\n        \"IS_METAL_AND_NONMETAL\": \"In this case, [B]{CATION}[/] is a [U]metal[/] and [B]{ANION}[/] is a [U]non-metal[/], which means this compound is [B]ionic[/].\",\n        \"IS_METAL_AND_POLYATOMIC\": \"In this case, [B]{CATION}[/] is a [U]metal[/] and [B]{ANION}[/] is a [U]polyatomic[/], which means this compound is [B]ionic[/].\",\n        \"IS_POLYATOMIC_AND_NONMETAL\": \"In this case, [B]{CATION}[/] is a polyatomic that gives electrons, and acts like a metal, and [B]{ANION}[/] is a [B]non-metal[/], which makes this compound an [B]ionic[/] compound.\",\n        \n        // TODO re record molecular and covalent problem smhs\n        \"IS_NONMETAL_AND_NONMETAL\": \"In this case, both [B]{CATION}[/] and [B]{ANION}[/] are [U]non-metals[/], which makes this compound [B]covalent[/].\",\n        \"IS_NONMETAL_AND_POLYATOMIC\": \"In this case, [B]{CATION}[/] is a [U]non-metal[/], and [B]{ANION}[/] is a [B]polyatomic[/], which makes this compound a [B]covalent[/] compound.\"\n    }\n}","import { $input, delay } from \"..\";\nimport { AudioPlayer } from \"../AudioPlayer\";\nimport { Bondable, QuantifiedPeriodicElement, SUBSCRIPT_TO_NUM, getPolyatomic } from \"../ChemicalCompounds\";\nimport { HOFBrINClS, METALS, Metals, NonMetals, PERIODIC_TABLE, combineSuffix, getFromSymbol } from \"../Elements\";\nimport { Explainer } from \"../Explainer\";\nimport { Nomenclature } from \"../Nomenclature\";\nimport { Routine, WaitForMillis, WaitForPromise, WaitForSeconds } from \"../Scheduler\";\nimport { capitalize } from \"../Util\";\nimport { commonExplainationScript } from \"./Common\";\n\nexport const compoundExplainationScript = {\n    \"INTRO\": {\n        \"IDENTIFY\": \"In this case, the chemical compound is an\",\n    },\n    \"LONE\": {\n        \"IS_LONE\": \"Fortunately, the input provided only contains one element, so we will not have to worry about ionic or covalent compounds.\",\n        \n        \"METAL\": \"The metal [B]{symbol}[/] would be called [B]{name}[/]\",\n        \"NONMETAL\": \"The non-metal [B]{symbol}[/] would be called [B]{name}[/]\",\n        \n        \"PREFIX\": \"The prefix signifies how many of that atom is present.\",\n        \"MPREFIX\": \"Since the element name begins with an A or O, the last letter of the prefix is adjusted accordingly.\",\n        \"HOFBRINCL\": \"Since this symbol [U]is[/] a [I]HOFBrINCl[/] twin (meaning it is required for it to come in pairs),\",\n\n        \"VALID_HOFBRINCL\": \"and it has a subscript of [B][I]2[/][/], this formula is [I]valid[/]. On the periodic table, this chemical is called [B]{name}[/].\",\n        \"INVALID_HOFBRINCL\": \"and it currently only has a subscript of 1, this formula is [I]invalid[/].\",\n\n        \"POLYATOMIC\": \"Fortunately, the input provided is a [B]polyatomic[/]. Polyatomics are [I]covalent compounds[/] that act as a single ion. Polyatomics can be [U]both nonmetals and metals[/]. This polyatomic behaves like\",\n        \"POLYATOMIC_METAL\": \"a [U]positive ion[/], and [I]gives[/] electrons to become more [I]positively[/] charged. This is similar to the chemical properties of a [B]metal[/].\",\n        \"POLYATOMIC_NONMETAL\": \"a [U]negative ion[/], and [I]takes[/] electrons to become more [I]negatively[/] charged. This is similar to the chemical properties of a [B]non-metal[/].\",\n        \"POLYATOMIC_RESULT\": \"The polyatomic [B]{formula}[/] is also known as [B]{name}[/].\"\n    },\n    \"IONIC\": {\n        \"NEEDS_SWAP\": \"In this formula, the metal and non-metal are in the wrong places. In ionic compounds, the metal goes first, and is followed by the non-metal. The correct way to write this formula would be [B]{metal_f}{non_metal_f}[/].\",\n\n        \"IS_IONIC\": \"[B]ionic[/] compound. We know this because the compound contains a [U]metal and non-metal[/]. In an ionic compound, the metal [I]gives it's electron to a non-metal[/] to create a [B]lattice[/] structure. In this formula,\",\n        \n        \"IDENTIFY_POLY_METAL\": \"the metal is a polyatomic. [B]{metal_f}[/] is a polyatomic ion known as [B]{metal}[/].\",\n        \"IDENTIFY_METAL\": \"the metal is [B]{metal_f}[/],\",\n\n        \"IDENTIFY_POLY_NONMETAL\": \"and the non-metal, [B]{nonmetal_f}[/] is a polyatomic ion known as [B]{nonmetal}[/].\",\n        \"IDENTIFY_NONMETAL\": \"and the non-metal in the formula is [B]{nonmetal_f}[/].\",\n\n        \"DESCRIBE_BOND\": \"In this bond, [B]{metal}[/] gives its [I]{metal_gives} electrons[/] to [B]{nonmetal}[/].\",\n        \"DESCRIBE_NO_SUFFIX\": \"To name this compound, we take the cation, and combine it with the anion. No modification of the non-metal's name is required, as [I]the non-metal is a polyatomic[/]. This compound would be called [U][B]{result}[/][/].\",\n        \"DESCRIBE_SUFFIX\": \"To name this compound, we take the cation, and combine it with the anion ending with an [I]-ide[/]. {nonmetal} turns into [B]{anion}[/], so this compound would be called [U][B]{result}[/][/].\"\n    },\n    \"COVALENT\": {\n        \"IS_COVALENT\": \"[B]covalent[/] compound. Covalent compounds are when two non-metals bond by sharing an electron to fill it's outer shell.\"\n    }\n};\n\ninterface FormulaGroup {\n    symbol: string;\n    quantity: number;\n}\n\nexport function parseFormula(formula: string): FormulaGroup[] {\n    const result: FormulaGroup[] = [];\n\n    const getQuantity = (n: string) => {\n        const num = Number(n || \"1\");\n        return Number.isNaN(num) ? 1 : num;\n    }\n\n    let segs = formula.split(\"\");\n    let num = \"\";\n    let symbol = \"\";\n\n    for (let i = 0;i < segs.length;i++) {\n        const letter = segs[i];\n        let val = SUBSCRIPT_TO_NUM[letter];\n\n        if (val) {\n            num += val;\n        } else {\n            const isLowerCase = letter.toLowerCase() == letter;\n            if (isLowerCase) {\n                symbol += letter;\n            } else {\n                if (symbol !== \"\") {\n                    result.push({ \"symbol\": symbol, \"quantity\": getQuantity(num) });\n                }\n                symbol = letter;\n                num = \"\";\n            }\n        }\n    }\n    result.push({ \"symbol\": symbol, \"quantity\": getQuantity(num) });\n\n    return result;\n}\n\nexport async function compound(): Promise<string> {\n    const formula: string = <string> $input.val();\n\n    return new Promise(res => {\n        Routine.startTask(function*() {\n            const $sect1 = Explainer.createExplainationSect();\n            const $listPoint1 = Explainer.createListPoint($sect1, 1);\n            \n            Explainer.followUpExplainationSect($sect1);\n            \n            yield new WaitForMillis(500);\n            \n            Explainer.followUpListPoint($listPoint1);\n    \n            const $introText = $(`<div class=\"anim-in-down\"></div>`);\n            let parseResult = Explainer.parseExplainationString(\n                commonExplainationScript.INTRO.IDENTIFICATION\n            );\n            $introText.html(parseResult.result);\n            \n            yield new WaitForSeconds(1);\n            \n            $sect1.append($introText);\n    \n            if (!mute) {\n                yield new WaitForPromise(\n                    AudioPlayer.playAudiosInSequence(\n                        AudioPlayer.getAudioPath(\"INTRO.IDENTIFICATION.START\", parseResult.variations[0]),\n                        AudioPlayer.getAudioPath(\"INTRO.IDENTIFICATION\", \"1\"),\n                        AudioPlayer.getAudioPath(\"INTRO.IDENTIFICATION.TO_IDENTIFY\", parseResult.variations[1]),\n                        AudioPlayer.getAudioPath(\"INTRO.IDENTIFICATION\", \"2\"),\n                        AudioPlayer.getAudioPath(\"INTRO.IDENTIFICATION.TO_CHECK_THE_FOLLOWING\", parseResult.variations[2]),\n                        AudioPlayer.getAudioPath(\"INTRO.IDENTIFICATION\", \"3\")\n                    )\n                );\n            }\n    \n            yield new WaitForMillis(500);\n\n            const compoundGroups: FormulaGroup[] = parseFormula(formula);\n            const validSymbols = Object.values(PERIODIC_TABLE).map(pe => pe.symbol);\n\n            // Validate all elements\n            for (const group of compoundGroups) {\n                if (validSymbols.includes(group.symbol)) {\n                    console.log(\"Valid symbol: \" + group.symbol);\n                } else {\n                    console.log(\"Invalid symbol: \" + group.symbol);\n\n                    const err = Explainer.parseExplainationString(commonExplainationScript.VALIDATION.FORMULA + \" \" + commonExplainationScript.VALIDATION.COMMON, {\n                        \"symbol\": group.symbol\n                    });\n                    const $errBox = $(`<div class=\"anim-in-down mt-4\"></div>`);\n                    $errBox.html(err.result);\n                    \n                    yield new WaitForMillis(500);\n                    \n                    $introText.append($errBox);\n\n                    if (!mute) {\n                        const symb = group.symbol.toUpperCase();\n                        const spellFormula: string[] = [\n                            AudioPlayer.getAudioPath(\"ELEMENTS.MISC\", symb[0])\n                        ];\n                        if (symb.length == 2) spellFormula.push(AudioPlayer.getAudioPath(\"ELEMENTS.MISC\", symb[1]))\n\n                        yield new WaitForPromise(\n                            AudioPlayer.playAudiosInSequence(\n                                AudioPlayer.getAudioPath(\"VALIDATION.FORMULA\", \"1\"),\n                                ...spellFormula,\n                                AudioPlayer.getAudioPath(\"VALIDATION.COMMON\", \"1\")\n                            )\n                        );\n                    }\n\n                    return res(\"Invalid formula\");\n                }\n            }\n\n            const quantifiedElements: QuantifiedPeriodicElement[] = compoundGroups.map(cg => ({\n                \"element\": getFromSymbol(cg.symbol),\n                \"quantity\": cg.quantity\n            }));\n            const isSingleton = compoundGroups.length == 1;\n\n            if (isSingleton) {\n                const $singleton = $(`<div class=\"anim-in-down mt-4\"></div>`);\n                const explainations: string[] = [ compoundExplainationScript.LONE.IS_LONE ];\n                const audioExplainations: string[] = [ AudioPlayer.getAudioPath(\"C/LONE.IS_LONE\", \"1\") ];\n                const quantifiedSingleton = quantifiedElements[0];\n                const symbol = quantifiedSingleton.element.symbol;\n                const name = quantifiedSingleton.element.name;\n                let combinedName;\n                \n                if (HOFBrINClS.includes(quantifiedSingleton.element) && quantifiedSingleton.quantity <= 2) {\n                    combinedName = name;\n\n                    explainations.push(compoundExplainationScript.LONE.HOFBRINCL);\n                    audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.HOFBRINCL\", \"1\"));\n                    \n                    if (quantifiedSingleton.quantity === 2) {\n                        explainations.push(compoundExplainationScript.LONE.VALID_HOFBRINCL);\n                        audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.VALID_HOFBRINCL\", \"1\"));\n                        audioExplainations.push(AudioPlayer.getAudioPath(\"ELEMENTS.ELEMENT\", name));\n\n                        if (symbol != \"Br\" && symbol != \"I\") {\n                            audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.VALID_HOFBRINCL\", \"2\"));\n                            combinedName += \" gas\";\n                        }\n                    } else {\n                        explainations.push(compoundExplainationScript.LONE.INVALID_HOFBRINCL);\n                        audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.INVALID_HOFBRINCL\", \"1\"));\n                        combinedName = \"Invalid formula\";\n                    }\n                } else {\n                    const combinationResult = combineSuffix(quantifiedSingleton.quantity, quantifiedSingleton.element);\n                    const hasPrefix = !!combinationResult.prefix;\n                    const ionic = METALS.includes(quantifiedElements[0].element);\n                    combinedName = combinationResult.result;\n\n                    const addSymbolSpeech = () => {\n                        if (symbol.length == 2) {\n                            audioExplainations.push(AudioPlayer.getAudioPath(\"ELEMENTS.MISC\", symbol[0]));\n                            audioExplainations.push(AudioPlayer.getAudioPath(\"ELEMENTS.MISC\", symbol[1].toUpperCase()));\n                        } else {\n                            audioExplainations.push(AudioPlayer.getAudioPath(\"ELEMENTS.MISC\", symbol));\n                        }\n                    }\n                    \n                    if (ionic) {\n                        explainations.push(compoundExplainationScript.LONE.METAL);\n                        audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.METAL\", \"1\"));\n                        addSymbolSpeech();\n                        audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.METAL\", \"2\"));\n                        if (hasPrefix) audioExplainations.push(AudioPlayer.getAudioPath(\"ELEMENTS.MISC\", combinationResult.prefix));\n                        audioExplainations.push(AudioPlayer.getAudioPath(\"ELEMENTS.ELEMENT\", name));\n                    } else {\n                        explainations.push(compoundExplainationScript.LONE.NONMETAL);\n                        audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.NONMETAL\", \"1\"));\n                        addSymbolSpeech();\n                        audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.NONMETAL\", \"2\"));\n                        if (hasPrefix) audioExplainations.push(AudioPlayer.getAudioPath(\"ELEMENTS.MISC\", combinationResult.prefix));\n                        audioExplainations.push(AudioPlayer.getAudioPath(\"ELEMENTS.ELEMENT\", name));\n                    }\n                    \n                    if (quantifiedSingleton.quantity > 1) {\n                        explainations.push(compoundExplainationScript.LONE.PREFIX);\n                        audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.PREFIX\", \"1\"));\n                        \n                        if (combinationResult.moddedPrefix) {\n                            explainations.push(compoundExplainationScript.LONE.MPREFIX);\n                            audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.MPREFIX\", \"1\"));\n                        }\n                    }\n                }\n\n                const singletonMsg = Explainer.parseExplainationString(explainations.join(\" \"), {\n                    \"symbol\": symbol,\n                    \"name\": capitalize(combinedName.toLowerCase())\n                });\n                $singleton.html(singletonMsg.result);\n                $introText.append($singleton);\n\n                if (!mute) {\n                    yield new WaitForPromise(\n                        AudioPlayer.playAudiosInSequence(...audioExplainations)\n                    );\n                }\n\n                yield new WaitForMillis(500);\n\n                return res(capitalize(combinedName.toLowerCase()));\n            } else {\n                const polyatomic = getPolyatomic(quantifiedElements);\n                const explainations: string[] = [ compoundExplainationScript.LONE.POLYATOMIC ];\n                const audioExplainations: string[] = [ AudioPlayer.getAudioPath(\"C/LONE.POLYATOMIC\", \"1\") ];\n\n                if (polyatomic) {\n                    const formula = polyatomic.chemicalFormula;\n                    const name = polyatomic.name;\n\n                    if (polyatomic.charge > 0) {\n                        explainations.push(compoundExplainationScript.LONE.POLYATOMIC_METAL);\n                        audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.POLYATOMIC_METAL\", \"1\"));\n                    } else {\n                        explainations.push(compoundExplainationScript.LONE.POLYATOMIC_NONMETAL);\n                        audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.POLYATOMIC_NONMETAL\", \"1\"));\n                    }\n\n                    explainations.push(compoundExplainationScript.LONE.POLYATOMIC_RESULT);\n                    audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.POLYATOMIC_RESULT\", \"1\"));\n                    \n                    for (const letter of formula) {\n                        const numVal = SUBSCRIPT_TO_NUM[letter];\n                        if (numVal) audioExplainations.push(AudioPlayer.getAudioPath(\"ELEMENTS.MISC\", numVal.toString()));\n                        else audioExplainations.push(AudioPlayer.getAudioPath(\"ELEMENTS.MISC\", letter.toUpperCase()));\n                    }\n\n                    audioExplainations.push(AudioPlayer.getAudioPath(\"C/LONE.POLYATOMIC_RESULT\", \"2\"));\n                    audioExplainations.push(AudioPlayer.getAudioPath(\"ELEMENTS.POLYATOMIC\", name));\n\n                    const polyatomicText = Explainer.parseExplainationString(explainations.join(\" \"), {\n                        \"formula\": formula,\n                        \"name\": capitalize(name.toLowerCase())\n                    });\n\n                    const $polyatomic = $(`<div class=\"anim-in-down mt-4\"></div>`);\n                    $polyatomic.html(polyatomicText.result);\n                    $introText.append($polyatomic);\n\n                    if (!mute) {\n                        yield new WaitForPromise(\n                            AudioPlayer.playAudiosInSequence(...audioExplainations)\n                        );\n                    }\n\n                    yield new WaitForMillis(500);\n\n                    return res(capitalize(name.toLowerCase()));\n                }\n            }\n\n            const bondables: Bondable[] = [];\n            let parseQueue = quantifiedElements.copyWithin(0, 0);\n\n            while (parseQueue.length !== 0) {\n                let useLength = 0;\n                let foundElement: Bondable | null = null;\n\n                if (parseQueue.length >= 2) {\n                    if (parseQueue.length >= 3) {\n                        foundElement = getPolyatomic(parseQueue.slice(0, 3));\n                        useLength = 3;\n                    }\n\n                    if (!foundElement) {\n                        foundElement = getPolyatomic(parseQueue.slice(0, 2));\n                        useLength = 2;\n                    }                    \n                }\n\n                if (!foundElement) {\n                    const element = parseQueue[0];\n                    foundElement = new Bondable([element], element.element.charges[0], element.element.name);\n                    useLength = 1;\n                }\n                \n                parseQueue.splice(0, useLength);\n                bondables.push(foundElement);\n            }\n\n            const $sect2 = Explainer.createExplainationSect();\n            yield new WaitForMillis(100);\n            Explainer.followUpExplainationSect($sect2);\n            \n            const $listPoint2 = Explainer.createListPoint($sect2, 2);\n            yield new WaitForMillis(500);\n            Explainer.followUpListPoint($listPoint2);\n\n            const $resultSect = Explainer.createExplainationSect();\n            \n            const followUpResultsSection = async () => {\n                Explainer.followUpExplainationSect($resultSect);\n                const $resultPoint = Explainer.createListPoint($resultSect, 3);\n                await delay(100);\n                Explainer.followUpListPoint($resultPoint);\n            }\n            \n            yield new WaitForMillis(1000);\n\n            const $identification = $(`<div class=\"anim-in-down\"></div>`);\n            const $result = $(`<div class=\"anim-in-down\"></div>`);\n\n            const ionic = bondables.length == 2 && (bondables[0].actsLikeMetal || bondables[1].actsLikeMetal);\n            const chargesBalance = bondables.map(b => b.charge).reduce((accumulate, v) => accumulate + v) === 0;\n\n            let identificationText: string[] = [ compoundExplainationScript.INTRO.IDENTIFY ];\n            let resultingText: string[] = [];\n\n            if (ionic && chargesBalance) {\n                const needsSwap = !bondables[0].actsLikeMetal;\n                const [ metal, nonmetal ]: [ Bondable<Metals>, Bondable<NonMetals> ] = needsSwap ? [bondables[1], bondables[0]] : [bondables[0], bondables[1]];\n                \n                if (needsSwap) identificationText.push(compoundExplainationScript.IONIC.NEEDS_SWAP);\n\n                let resultingName = capitalize(metal.name.toLowerCase()) + \" \";\n                let anionName = capitalize(nonmetal.name.toLowerCase());\n                \n                identificationText.push(compoundExplainationScript.IONIC.IS_IONIC);\n                resultingText.push(compoundExplainationScript.IONIC.DESCRIBE_BOND);\n                \n                if (metal.isSingleton()) {\n                    identificationText.push(compoundExplainationScript.IONIC.IDENTIFY_METAL);\n                } else {\n                    identificationText.push(compoundExplainationScript.IONIC.IDENTIFY_POLY_METAL);\n                }\n                \n                if (nonmetal.isSingleton()) {\n                    identificationText.push(compoundExplainationScript.IONIC.IDENTIFY_NONMETAL);\n                    resultingText.push(compoundExplainationScript.IONIC.DESCRIBE_SUFFIX);\n                    anionName = capitalize(Nomenclature.ELEMENT_TO_ANION[<Nomenclature.ValidAnionNonMetal> nonmetal.name].toLowerCase());\n                    resultingName += anionName;\n                } else {\n                    identificationText.push(compoundExplainationScript.IONIC.IDENTIFY_POLY_NONMETAL);\n                    resultingText.push(compoundExplainationScript.IONIC.DESCRIBE_NO_SUFFIX);\n                    resultingName += capitalize(nonmetal.name.toLowerCase());\n                }\n\n                $identification.html(Explainer.parseExplainationString(identificationText.join(\" \"), {\n                    \"metal\": capitalize(metal.name.toLowerCase()),\n                    \"metal_f\": metal.chemicalFormula,\n                    \"nonmetal\": capitalize(nonmetal.name.toLowerCase()),\n                    \"nonmetal_f\": nonmetal.chemicalFormula,\n                }).result);\n                $sect2.append($identification);\n                \n                yield new WaitForSeconds(1);\n                \n                followUpResultsSection();\n                \n                yield new WaitForMillis(500);\n                \n                $result.html(Explainer.parseExplainationString(resultingText.join(\" \"), {\n                    \"metal\": capitalize(metal.name.toLowerCase()),\n                    \"nonmetal\": capitalize(nonmetal.name.toLowerCase()),\n                    \"anion\": anionName,\n                    \"metal_gives\": metal.charge.toString(),\n                    \"result\": resultingName\n                }).result);\n\n                $resultSect.append($result);\n\n                return res(resultingName);\n            } else {\n                if (chargesBalance) {} //TODO\n\n                identificationText.push(compoundExplainationScript.COVALENT.IS_COVALENT);\n                $sect2.append($identification);\n            }\n\n            res(\"Work in progress\");\n        });\n    });\n}","import { Routine } from \"../Scheduler\";\n\nexport const compoundExplainationScript = {\n    \"INTRO\": {},\n    \"LONE\": {\n        \"IS_LONE_CHEMICAL\": \"Looking at the periodic table, the chemical symbol for [B]{name}[/] would be [B]{symbol}[/].\"\n    }\n};\n\nexport async function formula(): Promise<void> {\n    return new Promise(res => {\n        Routine.startTask(function*() {\n            res();\n        });\n    });\n}","import { QUANTITY_SUBSCRIPTS, SUBSCRIPT_TO_NUM } from \"./ChemicalCompounds\";\nimport { $explaination, Explainer } from \"./Explainer\";\nimport { capitalize } from \"./Util\";\nimport { compound } from \"./explainations/Compound\";\nimport { formula } from \"./explainations/Formula\";\n\nexport const $notice = $(\"#notice-box\");\nexport const $noticeConfirmBtn = $(\"#notice-confirm\");\n\n$noticeConfirmBtn.on(\"click\", () => {\n    $noticeConfirmBtn.attr(\"disabled\", \"disabled\");\n    $notice.css({ \"pointer-events\": \"none\", \"background\": \"transparent\" });\n    $notice.children().addClass(\"anim-out-down\");\n    \n    setTimeout(() => {\n        $main.addClass(\"anim-in-down\");\n    }, 500);\n\n    setTimeout(() => {\n        $notice.removeClass(\"d-flex\");\n        $notice.addClass(\"d-none\");\n    }, 1000);\n});\n\nexport const $main = $(\"main\");\nexport const $input = $(\"#input\");\nexport const $findFormulaBtn = $(\"#find-formula\");\nexport const $findCompoundBtn = $(\"#find-compound\");\nexport const $resetBtn = $(\"#reset\");\nexport const $execBtnsContainer = $(\"#exec-buttons\");\nexport const $mutedSwitch = $(\"#muted\");\n\nexport const delay: (ms: number) => Promise<void> = (ms: number) => new Promise(r => setInterval(r, ms));\n\n$(window).on(\"load\", () => {\n    ButtonLogic.inputEnable(true);\n\n    const examples = [\n        \"Dihydrogen Monoxide\",\n        \"Carbon Dioxide\",\n        \"Sodium Chloride\",\n        \"Lead II Chloride\",\n        \"Ammonium Iodide\",\n        \"H2O\",\n        \"NH4\",\n        \"CO2\",\n        \"NaCl\",\n        \"H2\",\n        \"O2\",\n        \"O3\",\n        \"NH4OH\"\n    ];\n\n    $input.trigger(\"focus\");\n    // $input.val(sample(examples));\n    $input.val(\"NH4OH\");\n    $input.trigger(\"input\");\n\n    (<any> window).mute = true;\n});\n\n$input.on(\"input\", () => {\n    const val = $input.val()!.toString();\n\n    $input.val((val => {\n        ButtonLogic.inputMode = \"NONE\";\n\n        $findFormulaBtn.attr(\"disabled\", \"disabled\");\n        $findCompoundBtn.attr(\"disabled\", \"disabled\");\n\n        if (val.length == 0) return \"\";\n\n        ButtonLogic.inputMode = new RegExp(\"[a-z]{2}\").test(val) ? \"COMPOUND\" : \"FORMULA\";\n\n        let result = val;\n        result = result.replace(new RegExp(\"!\"), \"1\").replace(new RegExp(\"@\"), \"2\").replace(new RegExp(\"#\"), \"3\").replace(new RegExp(\"\\\\$\"), \"4\").replace(new RegExp(\"%\"), \"5\").replace(new RegExp(\"\\\\^\"), \"6\").replace(new RegExp(\"&\"), \"7\").replace(new RegExp(\"\\\\*\"), \"8\").replace(new RegExp(\"\\\\(\"), \"9\").replace(new RegExp(\"\\\\)\"), \"0\");\n        \n        if (ButtonLogic.inputMode == \"COMPOUND\") {\n            result = result.replace(new RegExp(\"[^ \\\\w]+\", \"g\"), \"\");\n            result = result.replace(new RegExp(\"1\", \"g\"), \"I\").replace(new RegExp(\"2\", \"g\"), \"II\").replace(new RegExp(\"3\", \"g\"), \"III\").replace(new RegExp(\"4\", \"g\"), \"IV\").replace(new RegExp(\"5\", \"g\"), \"V\").replace(new RegExp(\"6\", \"g\"), \"VI\").replace(new RegExp(\"7\", \"g\"), \"VII\").replace(new RegExp(\"8\", \"g\"), \"VIII\").replace(new RegExp(\"9\", \"g\"), \"IX\").replace(new RegExp(\"10\", \"g\"), \"X\").replace(new RegExp(\"I0\", \"g\"), \"X\");\n            result = result.replace(new RegExp(\"[₀₁₂₃₄₅₆₇₈₉]+\", \"g\"), \"\");\n            result = result.split(\" \").map(word => capitalize(word)).join(\" \");\n        } else if (ButtonLogic.inputMode == \"FORMULA\") {\n            for (const quantity in QUANTITY_SUBSCRIPTS) result = result.replace(new RegExp(quantity, \"g\"), QUANTITY_SUBSCRIPTS[quantity]);\n            \n            result = result.replace(new RegExp(\"^[₀₁₂₃₄₅₆₇₈₉]+\", \"g\"), \"\");\n            result = result.replace(new RegExp(\"[^ \\\\w₁₂₃₄₅₆₇₈₉₀]+\", \"g\"), \"\");\n            result = result.replace(new RegExp(\"(\\\\w)₀\"), \"$1\");\n            \n            \"₀₁₂₃₄₅₆₇₈₉\".split(\"\").forEach(sub => {\n                result = result.split(sub).map(r => capitalize(r)).join(sub);\n            });\n\n            let fResult = \"\";\n            let num = \"\";\n            let segs = result.split(\"\");\n\n            for (let i = 0;i < segs.length;i++) {\n                const letter = segs[i];\n\n                let val = SUBSCRIPT_TO_NUM[letter];\n\n                if (val) {\n                    num += val;\n                    if (i != segs.length - 1) continue;\n                }\n\n                let subscript = \"\";\n\n                if (num && num != \"0\") {\n                    if (new RegExp(\"^10+$\").test(num)) {\n                        subscript = QUANTITY_SUBSCRIPTS[10];\n                    } else {\n                        if (num.endsWith(\"0\"))  {\n                            subscript = QUANTITY_SUBSCRIPTS[Number(num.replace(/0+$/, ''))];\n                        } else {\n                            subscript = QUANTITY_SUBSCRIPTS[Number(num.at(-1))];\n                        }\n                    }\n                }\n\n                fResult += subscript;\n                \n                if (!val) {\n                    fResult += letter;\n                }\n\n                num = \"\";\n            }\n\n            result = fResult;\n        }\n\n        ButtonLogic.toggleModeButtons();\n\n        return capitalize(result).trimStart();\n    })(val));\n});\n\nexport namespace ButtonLogic {\n    export let inputMode: \"COMPOUND\" | \"FORMULA\" | \"NONE\" = \"NONE\";\n\n    export function toggleModeButtons() {\n        $findCompoundBtn.attr(\"disabled\", \"disabled\");\n        $findFormulaBtn.attr(\"disabled\", \"disabled\");\n\n        switch (inputMode) {\n            case \"FORMULA\":\n                $findCompoundBtn.removeAttr(\"disabled\");\n                break;\n            case \"COMPOUND\":\n                $findFormulaBtn.removeAttr(\"disabled\");\n                break;\n        }\n    }\n\n    export function inputEnable(enable: boolean) {\n        $main.css(\"padding-top\", enable ? \"200px\" : \"20px\");\n        \n        $input.removeAttr(\"disabled\");\n        $mutedSwitch.removeAttr(\"disabled\");\n        \n        if (!enable) {\n            $findCompoundBtn.attr(\"disabled\", \"disabled\");\n            $findFormulaBtn.attr(\"disabled\", \"disabled\");\n            $input.attr(\"disabled\", \"disabled\");\n            $mutedSwitch.attr(\"disabled\", \"disabled\");\n            $execBtnsContainer.css({ \"height\": \"0px\", \"opacity\": 0  });\n        }\n    }\n\n    export async function createResultSec(title: string, body: string): Promise<void> {\n        const $explainationSect = $(`<section id=\"result\" class=\"rounded anim-in-up\"></section>`);\n        $explainationSect.html(`<h1>${title}</h1><span>${body}</span>`);\n        $explaination.append($explainationSect);\n        return delay(2000);\n    }\n\n    export async function onFormulaBtn() {\n        console.log(\"Explaining formula...\");\n        await Explainer.beginExplaination();\n        await formula();\n        await createResultSec(\"Formula Name\", \"Work in progress\");\n        return Explainer.endExplaination();\n    }\n    \n    export async function onCompoundBtn() {\n        console.log(\"Explaining compound name...\");\n        await Explainer.beginExplaination();\n        const result = await compound();\n        await createResultSec(\"Compound Name\", result);\n        return Explainer.endExplaination();\n    }\n\n    export function reset() {\n        $resetBtn.attr(\"disabled\", \"disabled\");\n        $resetBtn.fadeOut(2000);\n        $input.trigger(\"focus\");\n        $input.trigger(\"input\");\n    }\n}\n\n$input.on(\"keydown\", event => {\n    if (event.key == \"Enter\") {\n        $input.trigger(\"blur\");\n\n        switch (ButtonLogic.inputMode) {\n            case \"FORMULA\": {\n                ButtonLogic.onCompoundBtn();\n                break;\n            }\n            case \"COMPOUND\": {\n                ButtonLogic.onFormulaBtn();\n                break;\n            }\n        }\n    }\n});\n\n$mutedSwitch.on(\"click\", () => {\n    mute = !$mutedSwitch.is(\":checked\");\n});\n\n$findFormulaBtn.on(\"click\", ButtonLogic.onFormulaBtn);\n$findCompoundBtn.on(\"click\", ButtonLogic.onCompoundBtn);\n\n$resetBtn.on(\"click\", () => {\n    $execBtnsContainer.css({ \"height\": \"150px\", \"opacity\": 1 });\n    $input[0].scrollTo({ \"behavior\": \"smooth\" });\n    ButtonLogic.inputEnable(true);\n    ButtonLogic.reset();\n    $explaination.css({ \"opacity\": 0 });\n\n    delay(2000).then(async () => {\n        $explaination.empty();\n        $explaination.css({ \"opacity\": 1, \"height\": \"0\" });\n\n        await delay(1000);\n\n        $explaination.css({ \"opacity\": 1, \"height\": \"unset\" });\n    });\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}